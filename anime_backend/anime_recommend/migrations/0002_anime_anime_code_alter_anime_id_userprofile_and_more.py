# Generated by Django 5.2.7 on 2025-10-26 10:28

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('anime_recommend', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='anime',
            name='anime_code',
            field=models.CharField(blank=True, max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='anime',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserWatchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_watched', models.DateTimeField(default=django.utils.timezone.now)),
                ('progress', models.CharField(blank=True, help_text="e.g. 'Táº­p 12/24'", max_length=50)),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime_recommend.anime')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime_recommend.userprofile')),
            ],
            options={
                'db_table': 'user_watch_history',
                'unique_together': {('user_profile', 'anime')},
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='watched_animes',
            field=models.ManyToManyField(related_name='watched_by', through='anime_recommend.UserWatchHistory', to='anime_recommend.anime'),
        ),
    ]
